{
  "Parameters": {
    "bucketValueParameter": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/data_portal_status_page/bucket_name"
    },
    "DomainNameParameter": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/data_portal_status_page/domain"
    },
    "HostedZoneIDParameter": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "hosted_zone_id"
    },
    "HostedZoneNameParameter": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "hosted_zone_name"
    },
    "SSLCertUSE1ARNParameter": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "cert_use1_arn"
    },
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store."
    }
  },
  "Resources": {
    "dataportalstatuspageclientbucket45D0C810": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": {
          "Ref": "bucketValueParameter"
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        },
        "WebsiteConfiguration": {
          "ErrorDocument": "index.html",
          "IndexDocument": "index.html"
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "DataPortalStatusPageFrontEndCdkPipeline/DataPortalStatusPageFrontEndStage/StatusPageFrontEnd/data-portal-status-page-client-bucket/Resource"
      }
    },
    "dataportalstatuspageclientbucketPolicyCA8B88AA": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "dataportalstatuspageclientbucket45D0C810"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn"
                  ]
                }
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "dataportalstatuspageclientbucket45D0C810",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "dataportalstatuspageclientbucket45D0C810",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Principal": {
                "CanonicalUser": {
                  "Fn::GetAtt": [
                    "umccrscriptoai57856DCF",
                    "S3CanonicalUserId"
                  ]
                }
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "dataportalstatuspageclientbucket45D0C810",
                        "Arn"
                      ]
                    },
                    "/*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "DataPortalStatusPageFrontEndCdkPipeline/DataPortalStatusPageFrontEndStage/StatusPageFrontEnd/data-portal-status-page-client-bucket/Policy/Resource"
      }
    },
    "dataportalstatuspageclientbucketAutoDeleteObjectsCustomResourceF957E9C0": {
      "Type": "Custom::S3AutoDeleteObjects",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn"
          ]
        },
        "BucketName": {
          "Ref": "dataportalstatuspageclientbucket45D0C810"
        }
      },
      "DependsOn": [
        "dataportalstatuspageclientbucketPolicyCA8B88AA"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "DataPortalStatusPageFrontEndCdkPipeline/DataPortalStatusPageFrontEndStage/StatusPageFrontEnd/data-portal-status-page-client-bucket/AutoDeleteObjectsCustomResource/Default"
      }
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "DataPortalStatusPageFrontEndCdkPipeline/DataPortalStatusPageFrontEndStage/StatusPageFrontEnd/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
      }
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "00f2465b209575c44977ca8ff1c81d86d002849272ede5a8a90ac87dfff1e494.zip"
        },
        "Timeout": 900,
        "MemorySize": 128,
        "Handler": "__entrypoint__.handler",
        "Role": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Description": {
          "Fn::Join": [
            "",
            [
              "Lambda function for auto-deleting objects in ",
              {
                "Ref": "dataportalstatuspageclientbucket45D0C810"
              },
              " S3 bucket."
            ]
          ]
        }
      },
      "DependsOn": [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
      ],
      "Metadata": {
        "aws:cdk:path": "DataPortalStatusPageFrontEndCdkPipeline/DataPortalStatusPageFrontEndStage/StatusPageFrontEnd/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler"
      }
    },
    "umccrscriptoai57856DCF": {
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
      "Properties": {
        "CloudFrontOriginAccessIdentityConfig": {
          "Comment": "Created By CDK"
        }
      },
      "Metadata": {
        "aws:cdk:path": "DataPortalStatusPageFrontEndCdkPipeline/DataPortalStatusPageFrontEndStage/StatusPageFrontEnd/umccr-script-oai/Resource"
      }
    },
    "cloudfrontnameCFDistribution06F84CDF": {
      "Type": "AWS::CloudFront::Distribution",
      "Properties": {
        "DistributionConfig": {
          "Aliases": [
            {
              "Ref": "DomainNameParameter"
            }
          ],
          "CustomErrorResponses": [
            {
              "ErrorCachingMinTTL": 60,
              "ErrorCode": 403,
              "ResponseCode": 200,
              "ResponsePagePath": "/index.html"
            }
          ],
          "DefaultCacheBehavior": {
            "AllowedMethods": [
              "GET",
              "HEAD"
            ],
            "CachedMethods": [
              "GET",
              "HEAD"
            ],
            "Compress": true,
            "ForwardedValues": {
              "Cookies": {
                "Forward": "none"
              },
              "QueryString": false
            },
            "TargetOriginId": "origin1",
            "ViewerProtocolPolicy": "redirect-to-https"
          },
          "DefaultRootObject": "index.html",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": false,
          "Origins": [
            {
              "ConnectionAttempts": 3,
              "ConnectionTimeout": 10,
              "DomainName": {
                "Fn::GetAtt": [
                  "dataportalstatuspageclientbucket45D0C810",
                  "RegionalDomainName"
                ]
              },
              "Id": "origin1",
              "S3OriginConfig": {
                "OriginAccessIdentity": {
                  "Fn::Join": [
                    "",
                    [
                      "origin-access-identity/cloudfront/",
                      {
                        "Ref": "umccrscriptoai57856DCF"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "PriceClass": "PriceClass_All",
          "ViewerCertificate": {
            "AcmCertificateArn": {
              "Ref": "SSLCertUSE1ARNParameter"
            },
            "MinimumProtocolVersion": "TLSv1",
            "SslSupportMethod": "sni-only"
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "DataPortalStatusPageFrontEndCdkPipeline/DataPortalStatusPageFrontEndStage/StatusPageFrontEnd/cloud_front_name/CFDistribution"
      }
    },
    "StatusPageCustomDomainAlias0EA5F449": {
      "Type": "AWS::Route53::RecordSet",
      "Properties": {
        "Name": {
          "Fn::Join": [
            "",
            [
              "status.",
              {
                "Ref": "HostedZoneNameParameter"
              },
              "."
            ]
          ]
        },
        "Type": "A",
        "AliasTarget": {
          "DNSName": {
            "Fn::GetAtt": [
              "cloudfrontnameCFDistribution06F84CDF",
              "DomainName"
            ]
          },
          "HostedZoneId": {
            "Fn::FindInMap": [
              "AWSCloudFrontPartitionHostedZoneIdMap",
              {
                "Ref": "AWS::Partition"
              },
              "zoneId"
            ]
          }
        },
        "HostedZoneId": {
          "Ref": "HostedZoneIDParameter"
        }
      },
      "Metadata": {
        "aws:cdk:path": "DataPortalStatusPageFrontEndCdkPipeline/DataPortalStatusPageFrontEndStage/StatusPageFrontEnd/StatusPageCustomDomainAlias/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/21QwU7DMAz9lt2zbN2ExJFShLTDRNUdOGeJO0zXeEoc0BTl30noREHi5Oe85+fnVLLabOR68aA+/VKbYRU1OZDxwEoPoultq5wagcGJDjwFp0E0ZD27oFk0wTONM9HbGf+hWkcfaLJJ7T1wNj+hPRX9Xl0uN5htDTKSTaKEiX4r42PQA3Bhb2gqLZ1RX+fnqU9CnymY3pFlGV8c5iW11uD9zoBl5O+Jpmiei+Z/xQ/9CscnzIfiMZRUZfZ3n4SjwHCXU9Yd5F8z0/0FHYBTSqK98hvZ1Vbey2q9ePeISxfymhFkN9UvAYaX5X8BAAA="
      },
      "Metadata": {
        "aws:cdk:path": "DataPortalStatusPageFrontEndCdkPipeline/DataPortalStatusPageFrontEndStage/StatusPageFrontEnd/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Mappings": {
    "AWSCloudFrontPartitionHostedZoneIdMap": {
      "aws": {
        "zoneId": "Z2FDTNDATAQYW2"
      },
      "aws-cn": {
        "zoneId": "Z3RFFRIM2A3IF5"
      }
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}